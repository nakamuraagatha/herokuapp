angular.module('myApp', ['ngRoute', 'ngProgress']);

angular.module('myApp').config(['$provide', '$routeProvider', function($provide, $routeProvider) {
  $provide.factory('$routeProvider', function() {
    return $routeProvider;
  });
}]).run(['$routeProvider', '$http', '$route', function($routeProvider, $http, $route) {
  $http.get('scripts/routes.json').success(function(routeList) {
    angular.forEach(routeList, function(item) {
      $routeProvider.when(item.url, {
        templateUrl: item.template,
        controller: item.controller
      });
    });
    $route.reload();
  });
}]);
angular.module('myApp').controller('AppListController', ['$scope', 'ApiService', function($scope, ApiService) {
  var serviceEndPoint = '/api/registeredApp/';

  function failure(reason) {
    console.log(reason);
    $scope.newApp.app_url = '';
    $scope.newApp.name = '';
  }

  function getIndex(id) {
    var len = $scope.registeredApps.length;
    for (var i = 0; i < len; i++) {
      if ($scope.registeredApps[i]._id === id) {
        return i;
      }
    }
  }

  // controller logic

  ApiService.get(serviceEndPoint).then(function(data) {
    $scope.registeredApps = data;
  }, failure);

  $scope.createApp = function(newApp) {
    ApiService.post(serviceEndPoint, newApp).then(function(data) {
      $scope.registeredApps.push(data);
      $scope.newApp.app_url = '';
      $scope.newApp.name = '';
    }, failure);
  };

  $scope.prepareForEdit = function(id) {
    $scope.edit = true;
    $scope.newApp = $scope.registeredApps[getIndex(id)];
  };

  $scope.updateApp = function(app) {
    ApiService.put(serviceEndPoint + app._id, app).then(function(data) {
      $scope.registeredApps[getIndex(app._id)] = data;
      $scope.newApp.app_url = '';
      $scope.newApp.name = '';
      $scope.edit = false;
    }, failure);
  };

  $scope.removeApp = function(id) {
    ApiService.remove(serviceEndPoint + id).then(function(data) {
      $scope.registeredApps.splice(getIndex(id), 1);
    }, failure);
  };



}]);

angular.module('myApp').controller('CategoryController', ['$scope', '$http', '$location', 'ctgId', '$rootScope', 'ApiService',
  function($scope, $http, $location, ctgId, $rootScope, ApiService) {

    // controller settings, intializations
    var writeAccessInfoUrl = '/api/writeAccess/quotesList/';
    var ctgEndPoint = '/api/category/';

    function failure(reason) {
      console.log(reason);
    }

    // check if category or author for navigation
    if (typeof ctgId.getCtgObject() !== 'undefined') {
      if (ctgId.getCtgObject().isAuthor) {
        $scope.showAuthors = true;
      }
    }

    // Get all categories
    var promise = ApiService.get(writeAccessInfoUrl).then(function(data) {
      ctgId.hasWriteAccess = data.permission;
      $scope.hasWriteAccess = ctgId.hasWriteAccess;
    }, failure);

    promise.then(function() {

      ApiService.get(ctgEndPoint).then(function(data) {
        $scope.ctgs = $.map(data, function(val) {
          if (val.type === "ctg")
            return val;
        });
        $scope.authors = $.map(data, function(val) {
          if (val.type === "author")
            return val;
        });
      }, failure);

    }, failure);


    $scope.createCategory = function() {
      var ctgType = $scope.showAuthors ? "author" : "ctg";

      ApiService.post(ctgEndPoint, {
        'name': $scope.newCtgText,
        'type': ctgType
      }).then(function(data) {
        if (ctgType === "ctg") {
          $scope.ctgs.push(data);
        } else {
          $scope.authors.push(data);
        }
        $scope.showCreate = false;
        $scope.newCtgText = "";
      }, failure);
    };

    $scope.saveCategory = function(index) {
      var id, request;
      if ($scope.showAuthors) {
        id = $scope.authors[index]._id;
        request = {
          'name': $scope.authors[index].name,
          'type': $scope.authors[index].type
        };
      } else {
        id = $scope.ctgs[index]._id;
        request = {
          'name': $scope.ctgs[index].name,
          'type': $scope.ctgs[index].type
        };
      }

      ApiService.put(ctgEndPoint + id, request).then(function(data) {
        if ($scope.showAuthors) {
          data._id = $scope.authors[index]._id;
          $scope.authors[index] = data;
          $scope.saving_author[index] = false;
        } else {
          data._id = $scope.ctgs[index]._id;
          $scope.ctgs[index] = data;
          $scope.saving[index] = false;
        }
      }, failure);
    }


    $scope.saving = [];
    $scope.saving_author = [];
    $scope.editCategory = function(index) {
      if ($scope.showAuthors) {
        $scope.saving_author[index] = true;
      } else {
        $scope.saving[index] = true;
      }
    };

    $scope.deleteCategory = function(index) {
      var id;
      if ($scope.showAuthors) {
        id = $scope.authors[index]._id;
      } else {
        id = $scope.ctgs[index]._id;
      }

      ApiService.remove(ctgEndPoint + id).then(function(data) {
        if (data.message === "Deleted Successfully") {
          if ($scope.showAuthors) {
            $scope.authors.splice(index, 1);
          } else {
            $scope.ctgs.splice(index, 1);
          }
        }
      }, failure);

    };

    $scope.showQuotes = function(index) {
      if ($scope.showAuthors) {
        ctgId.setCtgId($scope.authors[index]._id);
        ctgId.setCtgObject({
          name: $scope.authors[index].name,
          isAuthor: true
        });
      } else {
        ctgId.setCtgId($scope.ctgs[index]._id);
        ctgId.setCtgObject({
          name: $scope.ctgs[index].name,
          isAuthor: false
        });
      }
      $location.path('/quotesList');
    };

  }
]);

angular.module('myApp').controller('HomeController', ['$scope', 'ApiService', function($scope, ApiService) {
  ApiService.get('/api/myApps').then(function(data) {
    $scope.myApps = data;
  });
}]);

angular.module('myApp').controller('QuotesController', ['$scope', 'ctgId', '$http', 'ngProgress', '$location', 'ApiService',
  function($scope, ctgId, $http, ngProgress, $location, ApiService) {

    // controller level instantiation
    var quotesEndPoint = '/api/quote/';
    var failure = function(reason) {
      console.log(reason);
    }
    $scope.hasWriteAccess = ctgId.hasWriteAccess;
    if (typeof ctgId.getCtgObject() === 'undefined') {
      $location.path('/categories');
      return;
    }
    if (ctgId.getCtgObject().isAuthor) {
      $scope.quoteTitleText = "Quotes by " + ctgId.getCtgObject().name;
      $scope.isAuthor = true;
      $scope.newQuoteAuthor = ctgId.getCtgObject().name;
    } else {
      $scope.quoteTitleText = "Quotes on " + ctgId.getCtgObject().name;
    }

    ApiService.get(quotesEndPoint + ctgId.getCtgId()).then(function(data) {
      $scope.quotes = [];
      angular.forEach(data, function(value, key) {
        this.push(value);
      }, $scope.quotes);
    }, failure);

    $scope.createQuote = function() {
      ApiService.post(quotesEndPoint, {
        'text': $scope.newQuoteText,
        'author': $scope.newQuoteAuthor,
        'ctg_id': ctgId.getCtgId()
      }).then(function(data) {
        $scope.quotes.push(data);
        $scope.showCreate = false;
        $scope.newQuoteText = "";
        if (ctgId.getCtgObject().isAuthor) {
          $scope.newQuoteAuthor = ctgId.getCtgObject().name;
        } else {
          $scope.newQuoteAuthor = "";
        }
      }, failure);
    };

    $scope.saveQuote = function(index) {
      ApiService.put(quotesEndPoint + $scope.quotes[index]._id, {
        'text': $scope.quotes[index].text,
        'author': $scope.quotes[index].author,
        'ctg_id': ctgId.getCtgId()
      }).then(function(data) {
        data._id = {
          $id: $scope.quotes[index]._id
        };
        $scope.quotes[index] = data;
        $scope.saving[index] = false;
      }, failure);
    };

    $scope.saving = [];
    $scope.editQuote = function(index) {
      $scope.saving[index] = true;
    };

    $scope.deleteQuote = function(index) {
      ApiService.remove(quotesEndPoint + $scope.quotes[index]._id).then(function(data) {
        if (data.message === "Deleted Successfully") {
          $scope.quotes.splice(index, 1);
        }
      }, failure);
    };
  }
]);

angular.module('myApp').controller('UsersPermissionsController', ['$scope', '$http', 'ngProgress', 'ApiService', function($scope, $http, ngProgress, ApiService) {

  var failure = function(reason) {
    console.log('reason');
  };

  ApiService.get('/api/usersList').then(function(data) {
    $scope.users = data;
    $scope.checkId = [];
    $scope.check = {};
    angular.forEach($scope.users, function(value, key) {
      $scope.check[value.email] = [false, false];
    });
  }, failure);

  ApiService.get('/api/registeredApp').then(function(data) {
    $scope.apps = [];
    angular.forEach(data, function(value, key) {
      this.push(value);
    }, $scope.apps);
  }, failure);

  $scope.change = function(appSelcted, email) {
    var appName = null !== appSelcted ? appSelcted.name : false;
    if (appName) {
      ApiService.get('api/appPermissions/' + appName + '/' + email).then(function(data) {
        $scope.check[email] = data;
      }, failure);
    }
  };

  $scope.updateChange = function(appSelcted, email) {
    var appName = typeof appSelcted !== 'undefined' ? appSelcted.name : false;
    if (appName) {

      ApiService.post('api/appPermissions/' + appName + '/' + email, [$scope.check[email][0], $scope.check[email][1]]).then(function(data) {
        $scope.check[email] = data;
      }, failure);
    }
  };
}]);

angular.module('myApp').directive('colorMe', [function() {
  function link(scope, element, attrs) {
    var colors = ["#000000", "#795548", "#4CAF50", "#009688", "#673AB7", "#FF5722", "#F44336"];
    var randomColor = colors[Math.floor(Math.random() * colors.length)];
    element.css('color', randomColor);
  }
  return {
    link: link
  };
}])

angular.module('myApp').factory('ctgId', [function() {
  var ctgId, ctgObject, hasWriteAccess;

  function setCtgId($ctgId) {
    ctgId = $ctgId;
  }

  function getCtgId() {
    return ctgId;
  }

  function getCtgObject() {
    return ctgObject;
  }

  function setCtgObject($ctgObject) {
    ctgObject = $ctgObject;
  }
  return {
    getCtgId: getCtgId,
    setCtgId: setCtgId,
    getCtgObject: getCtgObject,
    setCtgObject: setCtgObject,
    hasWriteAccess: hasWriteAccess
  };
}])

angular.module('myApp').factory('ApiService', ['$http', '$q', 'ngProgress', function($http, $q, ngProgress) {

  function service(apiMethod, apiUrl, requestData) {
    ngProgress.start();
    var deferred = $q.defer();
    deferred.notify('Calling Service...');
    var req = {
      method: apiMethod,
      url: apiUrl,
      headers: {
        'Content-Type': 'application/json'
      },
      data: requestData,
    }
    $http(req).
    success(function(data, status, headers, config) {
      ngProgress.complete();
      deferred.resolve(data);
    }).
    error(function(data, status, headers, config) {
      ngProgress.complete();
      deferred.reject(data);
    });

    return deferred.promise;
  }

  function get(apiUrl) {
    return service('GET', apiUrl, null)
  }

  function post(apiUrl, requestData) {
    return service('POST', apiUrl, requestData)
  }

  function put(apiUrl, requestData) {
    return service('PUT', apiUrl, requestData)
  }

  function remove(apiUrl) {
    return service('DELETE', apiUrl, null);
  }

  return {
    get: get,
    post: post,
    put: put,
    remove: remove
  };

}]);

{"version":3,"sources":["AJNodeApp.min.js"],"names":["angular","module","config","$provide","$routeProvider","factory","run","$http","$route","get","success","routeList","forEach","item","when","url","templateUrl","template","controller","reload","$scope","ApiService","failure","reason","console","log","newApp","app_url","name","getIndex","id","len","registeredApps","length","i","_id","serviceEndPoint","then","data","createApp","post","push","prepareForEdit","edit","updateApp","app","put","removeApp","remove","splice","$location","ctgId","$rootScope","writeAccessInfoUrl","ctgEndPoint","getCtgObject","isAuthor","showAuthors","promise","hasWriteAccess","permission","ctgs","$","map","val","type","authors","createCategory","ctgType","newCtgText","showCreate","saveCategory","index","request","saving_author","saving","editCategory","deleteCategory","message","showQuotes","setCtgId","setCtgObject","path","myApps","ngProgress","quotesEndPoint","quoteTitleText","newQuoteAuthor","getCtgId","quotes","value","this","createQuote","text","newQuoteText","author","ctg_id","saveQuote","$id","editQuote","deleteQuote","users","checkId","check","email","apps","change","appSelcted","appName","updateChange","directive","link","scope","element","colors","randomColor","Math","floor","random","css","$ctgId","ctgObject","$ctgObject","$q","service","apiMethod","apiUrl","requestData","start","deferred","defer","notify","req","method","headers","Content-Type","complete","resolve","error","reject"],"mappings":"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","file":"AJNodeApp.min.js","sourcesContent":["angular.module('myApp', ['ngRoute', 'ngProgress']);\r\n\r\nangular.module('myApp').config(['$provide', '$routeProvider', function($provide, $routeProvider) {\r\n  $provide.factory('$routeProvider', function() {\r\n    return $routeProvider;\r\n  });\r\n}]).run(['$routeProvider', '$http', '$route', function($routeProvider, $http, $route) {\r\n  $http.get('scripts/routes.json').success(function(routeList) {\r\n    angular.forEach(routeList, function(item) {\r\n      $routeProvider.when(item.url, {\r\n        templateUrl: item.template,\r\n        controller: item.controller\r\n      });\r\n    });\r\n    $route.reload();\r\n  });\r\n}]);\nangular.module('myApp').controller('AppListController', ['$scope', 'ApiService', function($scope, ApiService) {\r\n  var serviceEndPoint = '/api/registeredApp/';\r\n\r\n  function failure(reason) {\r\n    console.log(reason);\r\n    $scope.newApp.app_url = '';\r\n    $scope.newApp.name = '';\r\n  }\r\n\r\n  function getIndex(id) {\r\n    var len = $scope.registeredApps.length;\r\n    for (var i = 0; i < len; i++) {\r\n      if ($scope.registeredApps[i]._id === id) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  // controller logic\r\n\r\n  ApiService.get(serviceEndPoint).then(function(data) {\r\n    $scope.registeredApps = data;\r\n  }, failure);\r\n\r\n  $scope.createApp = function(newApp) {\r\n    ApiService.post(serviceEndPoint, newApp).then(function(data) {\r\n      $scope.registeredApps.push(data);\r\n      $scope.newApp.app_url = '';\r\n      $scope.newApp.name = '';\r\n    }, failure);\r\n  };\r\n\r\n  $scope.prepareForEdit = function(id) {\r\n    $scope.edit = true;\r\n    $scope.newApp = $scope.registeredApps[getIndex(id)];\r\n  };\r\n\r\n  $scope.updateApp = function(app) {\r\n    ApiService.put(serviceEndPoint + app._id, app).then(function(data) {\r\n      $scope.registeredApps[getIndex(app._id)] = data;\r\n      $scope.newApp.app_url = '';\r\n      $scope.newApp.name = '';\r\n      $scope.edit = false;\r\n    }, failure);\r\n  };\r\n\r\n  $scope.removeApp = function(id) {\r\n    ApiService.remove(serviceEndPoint + id).then(function(data) {\r\n      $scope.registeredApps.splice(getIndex(id), 1);\r\n    }, failure);\r\n  };\r\n\r\n\r\n\r\n}]);\r\n\nangular.module('myApp').controller('CategoryController', ['$scope', '$http', '$location', 'ctgId', '$rootScope', 'ApiService',\r\n  function($scope, $http, $location, ctgId, $rootScope, ApiService) {\r\n\r\n    // controller settings, intializations\r\n    var writeAccessInfoUrl = '/api/writeAccess/quotesList/';\r\n    var ctgEndPoint = '/api/category/';\r\n\r\n    function failure(reason) {\r\n      console.log(reason);\r\n    }\r\n\r\n    // check if category or author for navigation\r\n    if (typeof ctgId.getCtgObject() !== 'undefined') {\r\n      if (ctgId.getCtgObject().isAuthor) {\r\n        $scope.showAuthors = true;\r\n      }\r\n    }\r\n\r\n    // Get all categories\r\n    var promise = ApiService.get(writeAccessInfoUrl).then(function(data) {\r\n      ctgId.hasWriteAccess = data.permission;\r\n      $scope.hasWriteAccess = ctgId.hasWriteAccess;\r\n    }, failure);\r\n\r\n    promise.then(function() {\r\n\r\n      ApiService.get(ctgEndPoint).then(function(data) {\r\n        $scope.ctgs = $.map(data, function(val) {\r\n          if (val.type === \"ctg\")\r\n            return val;\r\n        });\r\n        $scope.authors = $.map(data, function(val) {\r\n          if (val.type === \"author\")\r\n            return val;\r\n        });\r\n      }, failure);\r\n\r\n    }, failure);\r\n\r\n\r\n    $scope.createCategory = function() {\r\n      var ctgType = $scope.showAuthors ? \"author\" : \"ctg\";\r\n\r\n      ApiService.post(ctgEndPoint, {\r\n        'name': $scope.newCtgText,\r\n        'type': ctgType\r\n      }).then(function(data) {\r\n        if (ctgType === \"ctg\") {\r\n          $scope.ctgs.push(data);\r\n        } else {\r\n          $scope.authors.push(data);\r\n        }\r\n        $scope.showCreate = false;\r\n        $scope.newCtgText = \"\";\r\n      }, failure);\r\n    };\r\n\r\n    $scope.saveCategory = function(index) {\r\n      var id, request;\r\n      if ($scope.showAuthors) {\r\n        id = $scope.authors[index]._id;\r\n        request = {\r\n          'name': $scope.authors[index].name,\r\n          'type': $scope.authors[index].type\r\n        };\r\n      } else {\r\n        id = $scope.ctgs[index]._id;\r\n        request = {\r\n          'name': $scope.ctgs[index].name,\r\n          'type': $scope.ctgs[index].type\r\n        };\r\n      }\r\n\r\n      ApiService.put(ctgEndPoint + id, request).then(function(data) {\r\n        if ($scope.showAuthors) {\r\n          data._id = $scope.authors[index]._id;\r\n          $scope.authors[index] = data;\r\n          $scope.saving_author[index] = false;\r\n        } else {\r\n          data._id = $scope.ctgs[index]._id;\r\n          $scope.ctgs[index] = data;\r\n          $scope.saving[index] = false;\r\n        }\r\n      }, failure);\r\n    }\r\n\r\n\r\n    $scope.saving = [];\r\n    $scope.saving_author = [];\r\n    $scope.editCategory = function(index) {\r\n      if ($scope.showAuthors) {\r\n        $scope.saving_author[index] = true;\r\n      } else {\r\n        $scope.saving[index] = true;\r\n      }\r\n    };\r\n\r\n    $scope.deleteCategory = function(index) {\r\n      var id;\r\n      if ($scope.showAuthors) {\r\n        id = $scope.authors[index]._id;\r\n      } else {\r\n        id = $scope.ctgs[index]._id;\r\n      }\r\n\r\n      ApiService.remove(ctgEndPoint + id).then(function(data) {\r\n        if (data.message === \"Deleted Successfully\") {\r\n          if ($scope.showAuthors) {\r\n            $scope.authors.splice(index, 1);\r\n          } else {\r\n            $scope.ctgs.splice(index, 1);\r\n          }\r\n        }\r\n      }, failure);\r\n\r\n    };\r\n\r\n    $scope.showQuotes = function(index) {\r\n      if ($scope.showAuthors) {\r\n        ctgId.setCtgId($scope.authors[index]._id);\r\n        ctgId.setCtgObject({\r\n          name: $scope.authors[index].name,\r\n          isAuthor: true\r\n        });\r\n      } else {\r\n        ctgId.setCtgId($scope.ctgs[index]._id);\r\n        ctgId.setCtgObject({\r\n          name: $scope.ctgs[index].name,\r\n          isAuthor: false\r\n        });\r\n      }\r\n      $location.path('/quotesList');\r\n    };\r\n\r\n  }\r\n]);\r\n\nangular.module('myApp').controller('HomeController', ['$scope', 'ApiService', function($scope, ApiService) {\r\n  ApiService.get('/api/myApps').then(function(data) {\r\n    $scope.myApps = data;\r\n  });\r\n}]);\r\n\nangular.module('myApp').controller('QuotesController', ['$scope', 'ctgId', '$http', 'ngProgress', '$location', 'ApiService',\r\n  function($scope, ctgId, $http, ngProgress, $location, ApiService) {\r\n\r\n    // controller level instantiation\r\n    var quotesEndPoint = '/api/quote/';\r\n    var failure = function(reason) {\r\n      console.log(reason);\r\n    }\r\n    $scope.hasWriteAccess = ctgId.hasWriteAccess;\r\n    if (typeof ctgId.getCtgObject() === 'undefined') {\r\n      $location.path('/categories');\r\n      return;\r\n    }\r\n    if (ctgId.getCtgObject().isAuthor) {\r\n      $scope.quoteTitleText = \"Quotes by \" + ctgId.getCtgObject().name;\r\n      $scope.isAuthor = true;\r\n      $scope.newQuoteAuthor = ctgId.getCtgObject().name;\r\n    } else {\r\n      $scope.quoteTitleText = \"Quotes on \" + ctgId.getCtgObject().name;\r\n    }\r\n\r\n    ApiService.get(quotesEndPoint + ctgId.getCtgId()).then(function(data) {\r\n      $scope.quotes = [];\r\n      angular.forEach(data, function(value, key) {\r\n        this.push(value);\r\n      }, $scope.quotes);\r\n    }, failure);\r\n\r\n    $scope.createQuote = function() {\r\n      ApiService.post(quotesEndPoint, {\r\n        'text': $scope.newQuoteText,\r\n        'author': $scope.newQuoteAuthor,\r\n        'ctg_id': ctgId.getCtgId()\r\n      }).then(function(data) {\r\n        $scope.quotes.push(data);\r\n        $scope.showCreate = false;\r\n        $scope.newQuoteText = \"\";\r\n        if (ctgId.getCtgObject().isAuthor) {\r\n          $scope.newQuoteAuthor = ctgId.getCtgObject().name;\r\n        } else {\r\n          $scope.newQuoteAuthor = \"\";\r\n        }\r\n      }, failure);\r\n    };\r\n\r\n    $scope.saveQuote = function(index) {\r\n      ApiService.put(quotesEndPoint + $scope.quotes[index]._id, {\r\n        'text': $scope.quotes[index].text,\r\n        'author': $scope.quotes[index].author,\r\n        'ctg_id': ctgId.getCtgId()\r\n      }).then(function(data) {\r\n        data._id = {\r\n          $id: $scope.quotes[index]._id\r\n        };\r\n        $scope.quotes[index] = data;\r\n        $scope.saving[index] = false;\r\n      }, failure);\r\n    };\r\n\r\n    $scope.saving = [];\r\n    $scope.editQuote = function(index) {\r\n      $scope.saving[index] = true;\r\n    };\r\n\r\n    $scope.deleteQuote = function(index) {\r\n      ApiService.remove(quotesEndPoint + $scope.quotes[index]._id).then(function(data) {\r\n        if (data.message === \"Deleted Successfully\") {\r\n          $scope.quotes.splice(index, 1);\r\n        }\r\n      }, failure);\r\n    };\r\n  }\r\n]);\r\n\nangular.module('myApp').controller('UsersPermissionsController', ['$scope', '$http', 'ngProgress', 'ApiService', function($scope, $http, ngProgress, ApiService) {\r\n\r\n  var failure = function(reason) {\r\n    console.log('reason');\r\n  };\r\n\r\n  ApiService.get('/api/usersList').then(function(data) {\r\n    $scope.users = data;\r\n    $scope.checkId = [];\r\n    $scope.check = {};\r\n    angular.forEach($scope.users, function(value, key) {\r\n      $scope.check[value.email] = [false, false];\r\n    });\r\n  }, failure);\r\n\r\n  ApiService.get('/api/registeredApp').then(function(data) {\r\n    $scope.apps = [];\r\n    angular.forEach(data, function(value, key) {\r\n      this.push(value);\r\n    }, $scope.apps);\r\n  }, failure);\r\n\r\n  $scope.change = function(appSelcted, email) {\r\n    var appName = null !== appSelcted ? appSelcted.name : false;\r\n    if (appName) {\r\n      ApiService.get('api/appPermissions/' + appName + '/' + email).then(function(data) {\r\n        $scope.check[email] = data;\r\n      }, failure);\r\n    }\r\n  };\r\n\r\n  $scope.updateChange = function(appSelcted, email) {\r\n    var appName = typeof appSelcted !== 'undefined' ? appSelcted.name : false;\r\n    if (appName) {\r\n\r\n      ApiService.post('api/appPermissions/' + appName + '/' + email, [$scope.check[email][0], $scope.check[email][1]]).then(function(data) {\r\n        $scope.check[email] = data;\r\n      }, failure);\r\n    }\r\n  };\r\n}]);\r\n\nangular.module('myApp').directive('colorMe', [function() {\r\n  function link(scope, element, attrs) {\r\n    var colors = [\"#000000\", \"#795548\", \"#4CAF50\", \"#009688\", \"#673AB7\", \"#FF5722\", \"#F44336\"];\r\n    var randomColor = colors[Math.floor(Math.random() * colors.length)];\r\n    element.css('color', randomColor);\r\n  }\r\n  return {\r\n    link: link\r\n  };\r\n}])\r\n\nangular.module('myApp').factory('ctgId', [function() {\r\n  var ctgId, ctgObject, hasWriteAccess;\r\n\r\n  function setCtgId($ctgId) {\r\n    ctgId = $ctgId;\r\n  }\r\n\r\n  function getCtgId() {\r\n    return ctgId;\r\n  }\r\n\r\n  function getCtgObject() {\r\n    return ctgObject;\r\n  }\r\n\r\n  function setCtgObject($ctgObject) {\r\n    ctgObject = $ctgObject;\r\n  }\r\n  return {\r\n    getCtgId: getCtgId,\r\n    setCtgId: setCtgId,\r\n    getCtgObject: getCtgObject,\r\n    setCtgObject: setCtgObject,\r\n    hasWriteAccess: hasWriteAccess\r\n  };\r\n}])\r\n\nangular.module('myApp').factory('ApiService', ['$http', '$q', 'ngProgress', function($http, $q, ngProgress) {\r\n\r\n  function service(apiMethod, apiUrl, requestData) {\r\n    ngProgress.start();\r\n    var deferred = $q.defer();\r\n    deferred.notify('Calling Service...');\r\n    var req = {\r\n      method: apiMethod,\r\n      url: apiUrl,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      data: requestData,\r\n    }\r\n    $http(req).\r\n    success(function(data, status, headers, config) {\r\n      ngProgress.complete();\r\n      deferred.resolve(data);\r\n    }).\r\n    error(function(data, status, headers, config) {\r\n      ngProgress.complete();\r\n      deferred.reject(data);\r\n    });\r\n\r\n    return deferred.promise;\r\n  }\r\n\r\n  function get(apiUrl) {\r\n    return service('GET', apiUrl, null)\r\n  }\r\n\r\n  function post(apiUrl, requestData) {\r\n    return service('POST', apiUrl, requestData)\r\n  }\r\n\r\n  function put(apiUrl, requestData) {\r\n    return service('PUT', apiUrl, requestData)\r\n  }\r\n\r\n  function remove(apiUrl) {\r\n    return service('DELETE', apiUrl, null);\r\n  }\r\n\r\n  return {\r\n    get: get,\r\n    post: post,\r\n    put: put,\r\n    remove: remove\r\n  };\r\n\r\n}]);\r\n"],"sourceRoot":"/source/"}